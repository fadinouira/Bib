<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="home.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAQqSURBVGhD7ZpLaBRBEEBb/KPeBP+oKIIiCooi+Fs1me5d1JseVBAVVIzGT66eRFAwGPUWNDs9
        G/EQPYhi/KB4jh8Cgr+gB4OfqHjQGI0xEqtmamd7dtfN9Ozsbgz7oMjS1VXdNZ+a6u6wMmXKlIDF9cNZ
        ND6PcavCIxWJubZu4NI3hBnxtYybZxiXj0F6QPr+Iah7BFLHoonVtm3J2dgwDq70QZhUG00yiLQxIatZ
        pGkseS0meAfMnTCJL2mTUqUX5A1M8rUt+Ntpy9YX5TMzrO3Fu0O8cRIMeidtEii9MJEb8LeKCWsB29Q0
        gixSRM+NZLxhod2Hy2bbJtNPM1t3fgJZFIiouQwG+pQ2cBdc8dNsvTWFevnHiE9jhjwL8iPNZwcT5hLq
        FTLcWgMDdHoGFPIai12YTj2CYyRm0t1Ug/kGwUSoR0jw+CLbcWqQnxDELtKGh7D2gO9uZRy4cNZS0uYJ
        Pq9cvlOcF+BKKQi5zgnAHa+DxcyJpA0KZBAu7ypO4U4UMIgkTjCpOyPk7fyyGZc7XGcomHKLhSF3e8YW
        1jbSaGIkxoCDjylH8jJpigc3r7rjc/keUvpo0mjgfLGTTrrsVFlsMJvh45yaRxVp/GK/G69cB0KeIoUe
        Qh4Fcb7s+DsITv2WDOQltfqEmysV415W2TCZNHpgYZjyU0etekQvTgXbP64f/Cj7hsta19DOGAEJIxBE
        zZzCOkGtPnDKbJqAtZ9a9QktEM/72kKt/YALH3U9YSTmk0af0AKxC82kn27IXkNJk4OYNUcx+p21ivVL
        WIFEzFFgn6qUo3IWaXJgyFWuAZft1JobJzvVZ4ghn7i+8He2Pn6zmVomVcrl1JoDYcZcAy6fUmtuuGxV
        bHSllbzkhstnro1hRak1B4MmEO83xN+jZWcV82SGCPnQ9WX/ztIHbf2g/WjxxtmuAb7suDwNSrgvu/JR
        9POyR+4Pg86/XCNMfUEJKxBnYZf04zP9IuoH0TAPUKs+YQViyMOKH58fRASLRNfQvEWt+oQViLDuuX60
        ShSRWKFMoLRFIy4fAheNWMY7m2rJSdSSQg8ua0DwMUWpoVY9vGV8m/6Sl5uHFAelWVgJcwa8H8qeV5AC
        Nn2py+UV0hSPUJa6SPrmg7D2kabweEt3rNW2kiYIGdtBPZAIOCkLB5Yg+DFOjXszv+0gJHODrhNKBIO0
        4eME8V0Zr51tuDSetHmSuWUKd0ZWkzYkMFNaR8C3eie+5lVZZMU+kUrbxObyup1Z8iX7JnZn4XY1nWMF
        NZPhS4jpsS7kY4UPEESBjhWS4EEP7qx4B0ZxDnows+FBT7aqecAc9LhgNjO3wJV8m2UiSdE9emsH2UwD
        FBlcJ+Ad4NaLtEnpyHO4KHvzWveECj7TXB4HeQDS3/F0CwR/zM6GA5r/9x8GypQZpDD2F0z4+4TExBzp
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>